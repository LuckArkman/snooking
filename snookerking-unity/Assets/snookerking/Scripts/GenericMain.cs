using snookerking.Camera;
using UnityEngine;
using UnityEngine.UI;

public class GenericMain : BaseMain
{
	public Camcontroller _camController;
	[HideInInspector]public int i;
	public Camera _camera;
	[HideInInspector]public int j;
	[HideInInspector]public float mousePositionXCurrent = 0.0f;
	[HideInInspector]public static string version = string.Empty;
	[HideInInspector]public const int THIS_GAME_ID = 34;
	[HideInInspector]public const string GAME_NAME_STRING = "REAL POOL 3D";
	[HideInInspector]public float screenWidth = Screen.width;
	[HideInInspector]public float screenHeight = Screen.height;
	[HideInInspector] public float screenMul;
	[HideInInspector]public const float SCREEN_REF_WIDTH = 480f;
	[HideInInspector]public bool iPadDevice;
	[HideInInspector]public Rect canvasSize;
	[HideInInspector]public static int startupCounter = 0;
	[HideInInspector]public float iPhoneXSideIndent;
	[HideInInspector]public const float touchDeviderPlatformWise = 15f;
	[HideInInspector]public float angleCurrent = 0f;
	[HideInInspector]public GAME_MODE gameMode;
	[HideInInspector]public MODE_TYPE modeType;
	[HideInInspector]public bool SmallLine = true;
	[HideInInspector]public const int TOTAL_POOL_BALLS_COUNT = 15;
	[HideInInspector]public const int TOTAL_SNOOKER_BALLS_COUNT = 21;
	[HideInInspector]public const int TOTAL_BALL_TYPES = 3;
	[HideInInspector]public const int TOTAL_HOLES_COUNT = 6;
	[HideInInspector]public const float BALL_STANDING_VEL = 0.1f;
	[HideInInspector]public const float BALL_ROT_SPEED = 2f;
	[HideInInspector]public const float BALL_STOPPER_A = 0.993f;
	[HideInInspector]public const float BALL_STOPPER_B = 0.99f;
	[HideInInspector]public const float BALL_STOPPER_C = 0.96f;
	[HideInInspector]public const int BALL_STOPPER_CHECK_A = 4;
	[HideInInspector]public const int BALL_STOPPER_CHECK_B = 2;
	[HideInInspector]public const float S_CAST_RADIUS_SM = 0.48f;
	[HideInInspector]public const float S_CAST_RADIUS_BIG = 0.49f;
	[HideInInspector]public const float S_CAST_RADIUS_FULL = 0.5f;
	[HideInInspector]public static Vector3 CUEBALL_START_POS = new Vector3(0f, 13.95f, -13.25f);
	[HideInInspector]public static Vector3 CUEBALL_START_SNOOKER_POS = new Vector3(0f, 13.95f, -12.78f);
	[HideInInspector]public const int HOLE_GRAVITY_FORCE = -60;
	[HideInInspector]public readonly Vector3 MAX_PLAY_AREA_LIMIT = new Vector3(11.5f, 0f, 24.3f);
	[HideInInspector]public bool bGamePaused;
	[HideInInspector]public bool bGameOver;
	[HideInInspector]public bool bBallInHand;
	[HideInInspector]public bool bTossDone;
	[HideInInspector]public TURN gameWinner;
	[HideInInspector]public int scoreValue;
	[HideInInspector]public int strikeCount;
	[HideInInspector]public int ballsPottedCount;
	[HideInInspector]public AI_DIFFICULTY aiDifficulty = AI_DIFFICULTY.MEDIUM;
	[HideInInspector]public int racksSelected;
	[HideInInspector]public int racksPlayed;
	[HideInInspector]public readonly int[] racksToPlay = new int[3] {1, 3, 5};
	[HideInInspector]public bool ballIsStanding;
	[HideInInspector]public bool canRePlaceCueBall;
	[HideInInspector]public bool legalBreakDone;
	[HideInInspector]public static int railHitCountInThisShot = 0;
	[HideInInspector]public static int[] railHitBallArray;
	[HideInInspector]public bool ballsReplaced = true;
	[HideInInspector]public bool ballPottedInThisTurn = true;
	[HideInInspector]public bool firstBallTouched;
	[HideInInspector]public bool foulInThisTurn;
	[HideInInspector]public bool cueBallPotted;
	[HideInInspector]public bool cueRailHit;
	[HideInInspector]public int[] playersRackWonArray = new int[2];
	[HideInInspector]public Vector3 cueBallMeshAnimVel;
	[HideInInspector]public float cueBallVerticalAnimValue;
	[HideInInspector]public float cueBallVerticalAnimTarget;
	[HideInInspector]public float cueBallVerticalAnimVel;
	[HideInInspector]public const float cueBallVerticalAnimTopVal = 1f;
	[HideInInspector]public const float CAMERA_Y_MIN = 10f;
	[HideInInspector]public const float CAMERA_Y_MAX = 70f;
	[HideInInspector]public const float CAMERA_DISTANCE_MIN = 10f;
	[HideInInspector]public const float CAMERA_DISTANCE_MAX = 45f;
	[HideInInspector]public CAMERA_MODE cameraMode = CAMERA_MODE.NORMAL;
	[HideInInspector]public CAMERA_MODE cameraPrevMode = CAMERA_MODE.NORMAL;
	[HideInInspector]public float camDistance = 10f;
	[HideInInspector]public Quaternion camParentRotation;
	[HideInInspector]public float camParentRotValueY = 40f;
	[HideInInspector]public float camParentRotTargetY = 30f;
	[HideInInspector]public float camParentRotVelY;
	[HideInInspector]public Vector3 camParentPosVel;
	[HideInInspector]public bool camCanRotate = true;
	[HideInInspector]public bool camEasingActive;
	[HideInInspector]public Vector3 camLocalPosVel = Vector3.zero;
	[HideInInspector]public Vector3 camLocalRotVel = Vector3.zero;
	[HideInInspector]public float cameraAnimSpeed;
	[HideInInspector]public bool camShouldGoToAiCamOnAiTurn = true;
	[HideInInspector]public readonly Color camTopAmbientColor = Color.black;
	[HideInInspector]public readonly Color camNormalAmbientColor = new Color(167f / 255f, 167f / 255f, 167f / 255f, 1f);
	[HideInInspector]public readonly Vector3 CAM_MENU_PARENT_DEFAULT_POS = new Vector3(28f, 37f, -43f);
	[HideInInspector]public readonly Vector3 CAM_MENU_PARENT_DEFAULT_ROT = new Vector3(27f, 317f, 0f);
	[HideInInspector]public readonly Vector3 CAM_FIRST_START_POS = new Vector3(0f, 16.25f, 21f);
	[HideInInspector]public LayerMask tableSideLayerMask;
	[HideInInspector]public LayerMask boundingBoxLayerMask;
	[HideInInspector]public float cueDistance;
	[HideInInspector]public float aiCueAnimValue;
	[HideInInspector]public float cueRotValueX;
	[HideInInspector]public float cueRotValueY;
	[HideInInspector]public float cueRotTargetY;
	[HideInInspector]public float cueRotVelY;
	[HideInInspector]public Vector3 cueSetPosAnimVel;
    [HideInInspector]public Vector3 cueSetPosRotAnimVel;
    [HideInInspector]public float touchSpeed;
    [HideInInspector]public Touch touchDataMove;
    [HideInInspector]public Touch touchDataZoom0;
    [HideInInspector]public Touch touchDataZoom1;
    [HideInInspector]public Vector2 inputValues = Vector2.zero;
    [HideInInspector]public Vector2 inputToRotValue;
    [HideInInspector]public Vector2 inputToRotTarget;
    [HideInInspector]public Vector2 inputToRotVel = Vector2.zero;
    [HideInInspector]public float fineAimMultiplier = 1f;
    public LayerMask ballLineLayerMask;
    public LayerMask ballsLayerMask;
    [HideInInspector]public Transform guideMainLineTransform;
    [HideInInspector]public Renderer guideMainLineRenderer;
    [HideInInspector]public Transform guideColRingTransform;
    [HideInInspector]public Renderer guideColRingRenderer;
    [HideInInspector]public Transform guideDirCueBallTrans;
    [HideInInspector]public Transform guideDirCueBallScalerTrans;
    [HideInInspector]public Renderer guideDirCueBallRenderer;
    [HideInInspector]public Transform guideDirTargetTrans;
    [HideInInspector]public Transform guideDirTargetScalerTrans;
    [HideInInspector]public GameObject guideDirTargetMesh;
    [HideInInspector]public Renderer guideDirTargetRenderer;
    [HideInInspector]public RaycastHit lineHit;
    [HideInInspector]public Vector3 guideColRingPosVec;
    [HideInInspector]public Vector3 guideReflectDirVec;
    [HideInInspector]public bool guideLineIsRed;
    [HideInInspector]public float guideTempAngle;
    [HideInInspector]public readonly Color guideRedColor = new Color(1f, 0f, 0f, 26f / 51f);
    [HideInInspector]public readonly Color guideWhiteColor = new Color(1f, 1f, 1f, 0.470588237f);
    [HideInInspector]public bool showGuideForAI;
    [HideInInspector]public Vector3 lastTargetVector;
    [HideInInspector]public Vector3 cueBallReboundVector;
    [HideInInspector]public float velocityOnHit;
    [HideInInspector]public Vector3 aimColRingPosOnHit;
    [HideInInspector]public GameObject firstTargetBallToHit;
    [HideInInspector]public float angleOnHit;
    [HideInInspector]public bool checkFixedUpdateBallTouch;
    [HideInInspector]public float cueBallToAimColRingDistanceOnHit;
    [HideInInspector]public Vector3 cueBallPosOnHit;
    [HideInInspector]public bool collidedWithSide;
    public static TURN currentTurn = TURN.PLAYER_1;
    [HideInInspector]public bool assignBallsScheduled;
    [HideInInspector]public bool ballsAssigned;
    [HideInInspector]public BALLS[] ballsAssignment = new BALLS[2] {BALLS.SOLID, BALLS.STRIPES};
    [HideInInspector]public int[] ballsPottedArray = new int[2];
    [HideInInspector]public int avatarSetToUse = 2;
    public static Sprite[] avatarTexArray;
    [HideInInspector]public int avatarPlayerToChoose;
    public static int[] chosenAvatar = new int[2];
    [HideInInspector]public readonly string[] avatarNames = new string[11] {"Alice", "Jack", "Emily", "David", "Anna", "James", "Ashley", "Will", "Jennifer", "Adam", "Player"};
    [HideInInspector]public string[] playerNames = new string[2] {string.Empty, string.Empty};
    public LayerMask ballsTouchLayerMask;
    [HideInInspector]public int tapToAimBallNum = -1;
    [HideInInspector]public float tapToAimStartTime;
    [HideInInspector]public int nineBallNextTarget;
    [HideInInspector]public bool UK8BallFreeShotOn;
    [HideInInspector]public bool UK8BallFirstFreeShot;
    [HideInInspector]public readonly int[] nineBallPosSwitchArray = new int[9] {0, 11, 13, 3, 9, 10, 8, 12, 7};
    [HideInInspector]public readonly int[] UK8BallPosSwitchArray = new int[15] {0, 11, 9, 3, 4, 14, 12, 7, 8, 2, 10, 1, 6, 13, 5};
    [HideInInspector]public readonly int[] snookerPosSwitchArray = new int[21]{0, 13, 11, 9, 7, 10, 2, 3, 8, 4, 14, 1, 12, 6, 5, 15, 16, 17, 18, 19, 20};
    [HideInInspector]public int practiceCurRackNum;
    [HideInInspector]public const int TIME_TRIAL_TOTAL_TIME = 240;
    [HideInInspector]public int ttCurrentTime;
    [HideInInspector]public float ttScoreMultiplier = 1f;
    [HideInInspector]public int ttBackToBackPots;
    [HideInInspector]public int ttGameStartTime;
    [HideInInspector]public int ttCurrentRackNum;
    [HideInInspector]public const int MATRIX_DEFAULT_LIVES = 1;
    [HideInInspector]public int matrixLivesLeft;
    [HideInInspector]public int[] matrixBallsPottedArray;
    [HideInInspector]public bool bShowMatrixBallUiNums;
    public LayerMask ballReSpotLayerMask;
    [HideInInspector]public int snookerTargetBall = 1;
    [HideInInspector]public int snookerRedPottedCount;
    [HideInInspector]public int snookerRedsSelected = 3;
    [HideInInspector]public int snookerFirstTouchedBallNum;
    [HideInInspector]public int snookerBallInvolvedInFoul;
    [HideInInspector]public int snookerPointsCurShot;
    [HideInInspector]public int snookerNominatedBall = 1;
    [HideInInspector]public int[] snookerScoresVal = new int[2];
    [HideInInspector]public bool powerMeterActive;
    [HideInInspector]public float strikePowerVal;
    [HideInInspector]public bool settingPowerNow;
    [HideInInspector]public float controlSetPowerLastPower = 1f;
    [HideInInspector]public float controlPowerFlickSliderVal;
    public LayerMask cueLayerMask;
    [HideInInspector]public float controlDragSliderVal;
    [HideInInspector]public Vector2 controlDragTapStartPos = Vector2.zero;
    [HideInInspector]public bool controlDragDone = true;
    [HideInInspector]public MOUSE_CLICK_AREA controlDragMouseClickArea = MOUSE_CLICK_AREA.LEFT;
    [HideInInspector]public float controlDragShotStartTime;
    [HideInInspector]public string alertOptionalTextPrefix;
    [HideInInspector]public string scheduledFunctionAfterNotif = string.Empty;
    [HideInInspector]public Sprite[] guiBallsTex = new Sprite[24];
    [HideInInspector]public const int guiBallEmptyRingIndex = 23;
    [HideInInspector]public int guiBallIntToDisplay;
    public Sprite[] guideSelectionTex;
    public Sprite[] controlsTexArray;
    [HideInInspector]public Texture tableTexture;
    [HideInInspector]public Texture tablePatternTexture;
    [HideInInspector]public bool spinSetOn;
    [HideInInspector]public const int spinSetVectorMaxDistance = 100;
    [HideInInspector]public Vector2 spinValues = Vector2.zero;
    [HideInInspector]public bool spinApply;
    [HideInInspector]public Vector2 spinCuePos = Vector2.zero;
    [HideInInspector]public Vector3 cueBallHitVector;
    [HideInInspector]public AudioSource musicAudioSource;
    [HideInInspector]public AudioSource thisAudioComponent;
    public void findUIObjectsAndComponents()
	{
		highScoresBtnBadge = GameObject.Find("Canvas/AllParent/MainMenu/HighScoresBtn/Badge");
		if (playerNames[0] == string.Empty)
		{
			highScoresBtnBadge.SetActive(value: false);
		}
		uiTouchParticleRectTrans = GameObject.Find("Canvas/AllParent/TouchParticle").GetComponent<RectTransform>();
		uiTouchParticleSystem = GameObject.Find("Canvas/AllParent/TouchParticle/ParticleStarLoop").GetComponent<ParticleSystem>();
		notificationObj = GameObject.Find("Canvas/AllParent/InGame/NotificationParent/Notification");
		notifScriptComp = notificationObj.GetComponent<notificationScript>();
		okBtnObj = GameObject.Find("Canvas/AllParent/InGame/OkBtn/Btn");
		okBtnParentRectTrans = GameObject.Find("Canvas/AllParent/InGame/OkBtn").GetComponent<RectTransform>();
		leftSideBtnsParentRectTrans = GameObject.Find("Canvas/AllParent/InGame/LeftSideBtnsParent").GetComponent<RectTransform>();
		placeCueBtnObj = GameObject.Find("Canvas/AllParent/InGame/LeftSideBtnsParent/PlaceCueBtn/Btn");
		spinBtnObj = GameObject.Find("Canvas/AllParent/InGame/LeftSideBtnsParent/SpinBtn/Btn");
		matrixBallNumBtnObj = GameObject.Find("Canvas/AllParent/InGame/LeftSideBtnsParent/MatrixBallNumBtn/Btn");
		powerValDisplayObj = GameObject.Find("Canvas/AllParent/InGame/PowerValDisplay");
		powerValDisplayText = GameObject.Find("Canvas/AllParent/InGame/PowerValDisplay/Text").GetComponent<Text>();
		powerMetersParentRectTrans = GameObject.Find("Canvas/AllParent/InGame/PowerMeters").GetComponent<RectTransform>();
		powerMeterSetPowerObj = GameObject.Find("Canvas/AllParent/InGame/PowerMeters/Parent/SetPower");
		setPowerSliderObj = GameObject.Find("Canvas/AllParent/InGame/PowerMeters/Parent/SetPower/Slider").GetComponent<Slider>();
		setPowerFillImgComp = GameObject.Find("Canvas/AllParent/InGame/PowerMeters/Parent/SetPower/Slider/Fill").GetComponent<Image>();
		powerMeterPowerFlickObj = GameObject.Find("Canvas/AllParent/InGame/PowerMeters/Parent/PowerFlick");
		powerFlickSliderObj = GameObject.Find("Canvas/AllParent/InGame/PowerMeters/Parent/PowerFlick/Slider").GetComponent<Slider>();
		powerFlickFillImgComp = GameObject.Find("Canvas/AllParent/InGame/PowerMeters/Parent/PowerFlick/Slider/Fill").GetComponent<Image>();
		helpHandPowerFlickRectTrans = GameObject.Find("Canvas/AllParent/InGame/PowerMeters/Parent/PowerFlick/HelpHand").GetComponent<RectTransform>();
		helpHandDragCueRectTrans = GameObject.Find("Canvas/AllParent/InGame/HelpHandDragCue").GetComponent<RectTransform>();
		bottomBlinkingTextObj = GameObject.Find("Canvas/AllParent/InGame/BottomBlinkingText");
		bottomBlinkingTextText = bottomBlinkingTextObj.GetComponent<Text>();
		spinControlParentObj = GameObject.Find("Canvas/AllParent/InGame/SpinControl");
		spinControlGroupRectTrans = GameObject.Find("Canvas/AllParent/InGame/SpinControl/Group").GetComponent<RectTransform>();
		spinControlGroupAnimScript = GameObject.Find("Canvas/AllParent/InGame/SpinControl/Group").GetComponent<uiAnimatorSpinControl>();
		spinSetThumbRectTrans = GameObject.Find("Canvas/AllParent/InGame/SpinControl/Group/SpinBall/SpinThumb").GetComponent<RectTransform>();
		spinOkBtnRectTrans = GameObject.Find("Canvas/AllParent/InGame/SpinControl/SpinOkBtn").GetComponent<RectTransform>();
		spinThumbInsideBtnRectTrans = GameObject.Find("Canvas/AllParent/InGame/LeftSideBtnsParent/SpinBtn/Btn/Anchor/Thumb").GetComponent<RectTransform>();
		guiBallDisplayObj = GameObject.Find("Canvas/AllParent/InGame/GuiBallDisplay/Image");
		guiBallDisplayImg = guiBallDisplayObj.GetComponent<Image>();
		guiScoreDisplayText = GameObject.Find("Canvas/AllParent/InGame/GuiScoreDisplay").GetComponent<Text>();
		guiScoreMultiplierText = GameObject.Find("Canvas/AllParent/InGame/GuiScoreDisplay/MultiplierText").GetComponent<Text>();
		guiRightSideText = GameObject.Find("Canvas/AllParent/InGame/RightSideText").GetComponent<Text>();
		guiRightSideTitleText = GameObject.Find("Canvas/AllParent/InGame/RightSideText/Title").GetComponent<Text>();
		matrixBallNumsParent = GameObject.Find("Canvas/AllParent/InGame/MatrixBallNums");
		for (i = 0; i < 15; i++)
		{
			if (i < 6)
			{
				ttBallsDisplayImgs[i] = GameObject.Find("Canvas/AllParent/InGame/BTBBallsDisplay/" + i).GetComponent<Image>();
			}
			matrixBallsDisplayImgs[i] = GameObject.Find("Canvas/AllParent/InGame/MatrixBallsDisplay/" + i).GetComponent<Image>();
			matrixBallsDisplayTexts[i] = GameObject.Find("Canvas/AllParent/InGame/MatrixBallsDisplay/" + i + "/Text").GetComponent<Text>();
			matrixBallNumsRects[i] = GameObject.Find("Canvas/AllParent/InGame/MatrixBallNums/" + i).GetComponent<RectTransform>();
		}
		igSnookerTextsParent = GameObject.Find("Canvas/AllParent/InGame/Snooker");
		igSnookerBallDisplayImg = GameObject.Find("Canvas/AllParent/InGame/Snooker/BallDisplay").GetComponent<Image>();
		igSnookerTurnIndicator = GameObject.Find("Canvas/AllParent/InGame/Snooker/P1/TurnIndicator").transform;
		for (i = 0; i < 2; i++)
		{
			snookerScoresText[i] = GameObject.Find("Canvas/AllParent/InGame/Snooker/P" + (i + 1)).GetComponent<Text>();
			snookerScoresNameText[i] = GameObject.Find("Canvas/AllParent/InGame/Snooker/P" + (i + 1) + "/Name").GetComponent<Text>();
		}
		settingsControlImgs[0] = GameObject.Find("Canvas/AllParent/Settings/BG/Group1/ControlBtn1/Image").GetComponent<Image>();
		settingsControlImgs[1] = GameObject.Find("Canvas/AllParent/Settings/BG/Group1/ControlBtn2/Image").GetComponent<Image>();
		settingsControlTexts[0] = GameObject.Find("Canvas/AllParent/Settings/BG/Group1/ControlBtn1/Text").GetComponent<Text>();
		settingsControlTexts[1] = GameObject.Find("Canvas/AllParent/Settings/BG/Group1/ControlBtn2/Text").GetComponent<Text>();
		settingsHandModeTexts[0] = GameObject.Find("Canvas/AllParent/Settings/BG/Group1/HandModeBtn1/Text").GetComponent<Text>();
		settingsHandModeTexts[1] = GameObject.Find("Canvas/AllParent/Settings/BG/Group1/HandModeBtn2/Text").GetComponent<Text>();
		settingsTableText = GameObject.Find("Canvas/AllParent/Settings/BG/Group0/TableBtn/Text").GetComponent<Text>();
		settingsTablePatternText = GameObject.Find("Canvas/AllParent/Settings/BG/Group0/PatternBtn/Text").GetComponent<Text>();
		settingsGuideImg = GameObject.Find("Canvas/AllParent/Settings/BG/Group0/GuideBtn/Image").GetComponent<Image>();
		settingsGuideText = GameObject.Find("Canvas/AllParent/Settings/BG/Group0/GuideBtn/Text").GetComponent<Text>();
		settingsSensitivitySlider = GameObject.Find("Canvas/AllParent/Settings/BG/Group1/SensitivitySlider").GetComponent<Slider>();
		settingsSelectedTabArrowTrans = GameObject.Find("Canvas/AllParent/Settings/BG/TabGroup/TabBtn0/SelectedArrow").transform;
		for (i = 0; i < settingsGroupsArray.Length; i++)
		{
			settingsGroupsArray[i] = GameObject.Find("Canvas/AllParent/Settings/BG/Group" + i);
			settingsTabBtnsTransArray[i] = GameObject.Find("Canvas/AllParent/Settings/BG/TabGroup/TabBtn" + i).transform;
		}
		selControlSelectedTrans = GameObject.Find("Canvas/AllParent/SelectControl/BG/Group/ControlBtn2/Selected").transform;
		for (i = 0; i < 3; i++)
		{
			selControlBtnsTransArr[i] = GameObject.Find("Canvas/AllParent/SelectControl/BG/Group/ControlBtn" + i).transform;
		}
		rulesSelectedTabArrowTrans = GameObject.Find("Canvas/AllParent/Rules/BG/TabGroup/TabBtn0/SelectedArrow").transform;
		for (i = 0; i < rulesGroupsArray.Length; i++)
		{
			rulesGroupsArray[i] = GameObject.Find("Canvas/AllParent/Rules/BG/Group" + i);
			rulesTabBtnsTransArray[i] = GameObject.Find("Canvas/AllParent/Rules/BG/TabGroup/TabBtn" + i).transform;
		}
		enterNamePlayerTexts[0] = GameObject.Find("Canvas/AllParent/EnterName/NamePlayer1").GetComponent<InputField>();
		enterNamePlayerTexts[1] = GameObject.Find("Canvas/AllParent/EnterName/NamePlayer2").GetComponent<InputField>();
		enterNamePlayerTextErrors[0] = GameObject.Find("Canvas/AllParent/EnterName/NamePlayer1/Error");
		enterNamePlayerTextErrors[1] = GameObject.Find("Canvas/AllParent/EnterName/NamePlayer2/Error");
		enterNameAvatars[0] = GameObject.Find("Canvas/AllParent/EnterName/AvatarPlayer1").GetComponent<Image>();
		enterNameAvatars[1] = GameObject.Find("Canvas/AllParent/EnterName/AvatarPlayer2").GetComponent<Image>();
		rackSelectedObjTrans = GameObject.Find("Canvas/AllParent/EnterName/BG/Group/RackSelected").transform;
		aiLevelSelectedObjTrans = GameObject.Find("Canvas/AllParent/EnterName/BG/Group/ForSinglePlayer/AiSelected").transform;
		indivisualControlBtnObj = GameObject.Find("Canvas/AllParent/EnterName/BG/Group/ChooseControlBtn");
		enterNameSkillGroup = GameObject.Find("Canvas/AllParent/EnterName/BG/Group/ForSinglePlayer");
		enterSoloNameAvatarImg = GameObject.Find("Canvas/AllParent/EnterNameSolo/BG/Group/AvatarPlayer1").GetComponent<Image>();
		enterSoloNamePlayerText = GameObject.Find("Canvas/AllParent/EnterNameSolo/BG/Group/NamePlayer1").GetComponent<InputField>();
		enterSoloNamePlayerError = GameObject.Find("Canvas/AllParent/EnterNameSolo/BG/Group/NamePlayer1/Error");
		enterSoloNameTitle = GameObject.Find("Canvas/AllParent/EnterNameSolo/Title").GetComponent<Text>();
		modeTypeTitleText = GameObject.Find("Canvas/AllParent/ModeTypeSelect/ButtonsParent/Title").GetComponent<Text>();
		selectAvatarTitleText = GameObject.Find("Canvas/AllParent/SelectAvatar/Title").GetComponent<Text>();
		selectCueTitleText = GameObject.Find("Canvas/AllParent/SelectCue/Title").GetComponent<Text>();
		selectCueSelectedObjTrans = GameObject.Find("Canvas/AllParent/SelectCue/BG/Group/Selected").transform;
		for (i = 0; i < 6; i++)
		{
			selectCueBtnObjsTrans[i] = GameObject.Find("Canvas/AllParent/SelectCue/BG/Group/" + i).transform;
		}
		gmOverTitleText = GameObject.Find("Canvas/AllParent/GameOver/Title").GetComponent<Text>();
		gmOverAvatarObjs[0] = GameObject.Find("Canvas/AllParent/GameOver/BG/Group/0");
		gmOverAvatarObjs[1] = GameObject.Find("Canvas/AllParent/GameOver/BG/Group/1");
		gmOverNameTexts[0] = GameObject.Find("Canvas/AllParent/GameOver/BG/Group/0/Text").GetComponent<Text>();
		gmOverNameTexts[1] = GameObject.Find("Canvas/AllParent/GameOver/BG/Group/1/Text").GetComponent<Text>();
		gmOverWinnerParentTrans = GameObject.Find("Canvas/AllParent/GameOver/BG/Group/WinnerParent").transform;
		gmOverParticleStarLoopObj = GameObject.Find("Canvas/AllParent/GameOver/BG/Group/WinnerParent/ParticleParent/ParticleStarLoop");
		gmOverRackText = GameObject.Find("Canvas/AllParent/GameOver/BG/Group/VsText/RackText").GetComponent<Text>();
		gmOverBtnsText[0] = GameObject.Find("Canvas/AllParent/GameOver/PlayAgainBtn/Text").GetComponent<Text>();
		gmOverBtnsText[1] = GameObject.Find("Canvas/AllParent/GameOver/MainMenuBtn/Text").GetComponent<Text>();
		gmOverNextAndAgainBtnImgs[0] = GameObject.Find("Canvas/AllParent/GameOver/PlayAgainBtn/ImageAgain");
		gmOverNextAndAgainBtnImgs[1] = GameObject.Find("Canvas/AllParent/GameOver/PlayAgainBtn/ImageNext");
		gmOverSoloTitleText = GameObject.Find("Canvas/AllParent/GameOverSolo/Title").GetComponent<Text>();
		gmOverSoloScoreText = GameObject.Find("Canvas/AllParent/GameOverSolo/BG/Group/ScoreText").GetComponent<Text>();
		gmOverSoloScoreBestText = GameObject.Find("Canvas/AllParent/GameOverSolo/BG/Group/ScoreBestText").GetComponent<Text>();
		rateGameMsgScriptComp = GameObject.Find("Canvas/AllParent/RateGameMsg").GetComponent<rateGameMsgScript>();
		rateGameMsgScriptComp.disableMessage();
		notificationObj.SetActive(value: false);
		okBtnObj.SetActive(value: false);
		placeCueBtnObj.SetActive(value: false);
		spinBtnObj.SetActive(value: false);
		powerValDisplayObj.SetActive(value: false);
		bottomBlinkingTextObj.SetActive(value: false);
		spinControlParentObj.SetActive(value: false);
		guiBallDisplayObj.SetActive(value: false);
		guiScoreDisplayText.gameObject.SetActive(value: false);
		guiRightSideText.gameObject.SetActive(value: false);
		enterNamePlayerTexts[0].text = playerNames[0];
		enterNamePlayerTexts[1].text = playerNames[1];
		enterNamePlayerTextErrors[0].SetActive(value: false);
		enterNamePlayerTextErrors[1].SetActive(value: false);
		enterSoloNamePlayerError.SetActive(value: false);
		rackSelectedObjTrans.SetParent(GameObject.Find("Canvas/AllParent/EnterName/BG/Group/Rack" + racksSelected).transform, worldPositionStays: false);
		rackSelectedObjTrans.SetAsFirstSibling();
		aiLevelSelectedObjTrans.SetParent(GameObject.Find("Canvas/AllParent/EnterName/BG/Group/ForSinglePlayer/Ai" + (int)aiDifficulty).transform, worldPositionStays: false);
		aiLevelSelectedObjTrans.SetAsFirstSibling();
		enterSoloNamePlayerText.text = playerNames[0];
	}
    
}