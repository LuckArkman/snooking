using System.Collections;
using UnityEngine;
using UnityEngine.UI;

public class BaseMain : MonoBehaviour
{
    [HideInInspector]public Transform railHitAudioTransform;
    [HideInInspector]public AudioSource railHitAudioComponent;
    [HideInInspector]public AudioClip buttonClickSound;
    [HideInInspector]public AudioClip[] cueballHitSounds = new AudioClip[2];
    [HideInInspector]public AudioClip[] ballPocketSounds = new AudioClip[3];
    [HideInInspector]public AudioClip[] ballsHitSound = new AudioClip[2];
    [HideInInspector]public AudioClip railHitSoundClip;
    [HideInInspector]public AudioClip gameWinSound;
    public static Vector3 specLookAtPos;
    public static string pauseStatsText = string.Empty;
    [HideInInspector]public bool playingFirstMatch = true;
    [HideInInspector]public bool userSelControlDone;
    [HideInInspector]public bool showPowerFlickHelpHand = true;
    [HideInInspector]public bool showDragCueHelpHand = true;
    [HideInInspector]public float helpHandPos;
    [HideInInspector]public egHighScoresScript egHighScoresComp;
    public const string URL_FREE_GAME = "market://details?id=com.eivaagames.RealPool3DFree";
    public const string URL_PAID_GAME = "market://details?id=com.eivaagames.RealPool3D";
    public const string URL_EG_WEBSITE = "http://www.eivaagames.com/";
    public const string URL_TWITTER = "https://twitter.com/eivaagames";
    public const string URL_YOUTUBE = "https://www.youtube.com/eivaagames";
    public const string URL_FB_PAGE = "fb://page/269426263878";
    public const string URL_GMG_STORE = "market://search?q=pub:EivaaGames";
    [HideInInspector]public bool adsRemoved;
    [HideInInspector]public adMobScript adMobComponent;
    public const string p0 = "ca";
    public const string p3 = "app";
    public const string p6 = "pub";
    public const string i1 = "1487856159067139";
    public const string appIDAnd = "9614634804";
    public const string appIDiOS = "6521567605";
    public const string adIDBannerAnd = "not-used";
    public const string adIDBanneriOS = "not-used";
    public const string adIDInterstAnd = "5044834409";
    public const string adIDInterstiOS = "7998300806";
    public Transform thisTransform;
    public Rigidbody thisRigidbody;
    [HideInInspector]public GameObject cueBallParentObj;
    [HideInInspector]public Transform cueBallParentTrans;
    [HideInInspector]public Transform cueBallMashParentTrans;
    [HideInInspector]public GameObject[] cueBallTypesArray = new GameObject[2];
    public Transform cameraObjTransform;
    [HideInInspector]public Camera cameraObjCamera;
    [HideInInspector]public Transform camParentObjMainMenuTransform;
    [HideInInspector]public GameObject camParentObjInGame;
    [HideInInspector]public Transform camParentObjInGameTransform;
    [HideInInspector]public Transform cameraTopParentObjTransform;
    [HideInInspector]public Transform cameraAiParentObjTransform;
    [HideInInspector]public Transform cameraFreeViewParentObjTransform;
    [HideInInspector]public GameObject cameraRenderTextureUIObj;
    public Transform cueParentObjTransform;
    [HideInInspector]public Transform cueObjectTransform;
    [HideInInspector]public Transform cueGroupTransform;
    [HideInInspector]public Transform cueSetPosTransform;
    [HideInInspector]public Transform cueSetPosHoldingParentTrans;
    [HideInInspector]public Transform cueSetPosHoldingRotatorTrans;
    [HideInInspector]public Transform cueShadowTransform;
    [HideInInspector]public GameObject cueShadowMesh;
    [HideInInspector]public Transform cueHelpHandAnimTrans;
    [HideInInspector]public GameObject ballInHandIndicatorObj;
    [HideInInspector]public Transform ballInHandIndicatorTrans;
    [HideInInspector]public Transform ballInHandIndicatorMeshTrans;
    [HideInInspector]public GameObject ukBallLimit;
    [HideInInspector]public GameObject roomObj0;
    [HideInInspector]public GameObject roomObj1;
    [HideInInspector]public Renderer tableTopBoardRenderer;
    [HideInInspector]public GameObject tableDiamondsObj;
    public GameObject[] ballsArray = new GameObject[21];
    [HideInInspector]public Rigidbody[] ballsRigidbodyArray = new Rigidbody[21];
    [HideInInspector]public Vector3[] ballPositions = new Vector3[21];
    [HideInInspector]public GameObject[,] ballsTypesArray = new GameObject[15, 3];
    [HideInInspector]public GameObject[] cuesObjArray = new GameObject[6];
    [HideInInspector]public Vector3[] holesTriggerPos = new Vector3[6];
    [HideInInspector]public RectTransform canvasAllParentRectTrans;
    [HideInInspector]public GameObject highScoresBtnBadge;
    [HideInInspector]public RectTransform uiTouchParticleRectTrans;
    [HideInInspector]public ParticleSystem uiTouchParticleSystem;
    [HideInInspector]public GameObject notificationObj;
    [HideInInspector]public notificationScript notifScriptComp;
    [HideInInspector]public GameObject okBtnObj;
    [HideInInspector]public RectTransform okBtnParentRectTrans;
    [HideInInspector]public RectTransform leftSideBtnsParentRectTrans;
    [HideInInspector]public GameObject placeCueBtnObj;
    [HideInInspector]public GameObject spinBtnObj;
    [HideInInspector]public GameObject matrixBallNumBtnObj;
    [HideInInspector]public GameObject powerValDisplayObj;
    [HideInInspector]public Text powerValDisplayText;
    public RectTransform powerMetersParentRectTrans;
	[HideInInspector]public GameObject powerMeterSetPowerObj;
	[HideInInspector]public Slider setPowerSliderObj;
	[HideInInspector]public Image setPowerFillImgComp;
	[HideInInspector]public GameObject powerMeterPowerFlickObj;
	[HideInInspector]public Slider powerFlickSliderObj;
	[HideInInspector]public Image powerFlickFillImgComp;
	[HideInInspector]public RectTransform helpHandPowerFlickRectTrans;
	[HideInInspector]public RectTransform helpHandDragCueRectTrans;
	[HideInInspector]public GameObject bottomBlinkingTextObj;
	[HideInInspector]public Text bottomBlinkingTextText;
	[HideInInspector]public GameObject spinControlParentObj;
	[HideInInspector]public RectTransform spinControlGroupRectTrans;
	[HideInInspector]public uiAnimatorSpinControl spinControlGroupAnimScript;
	[HideInInspector]public RectTransform spinSetThumbRectTrans;
	[HideInInspector]public RectTransform spinOkBtnRectTrans;
	[HideInInspector]public RectTransform spinThumbInsideBtnRectTrans;
	[HideInInspector]public GameObject guiBallDisplayObj;
	[HideInInspector]public Image guiBallDisplayImg;
	[HideInInspector]public Text guiScoreDisplayText;
	[HideInInspector]public Text guiScoreMultiplierText;
	[HideInInspector]public Text guiRightSideText;
	[HideInInspector]public Text guiRightSideTitleText;
	[HideInInspector]public GameObject matrixBallNumsParent;
	[HideInInspector]public Image[] ttBallsDisplayImgs = new Image[6];
	[HideInInspector]public Image[] matrixBallsDisplayImgs = new Image[15];
	[HideInInspector]public Text[] matrixBallsDisplayTexts = new Text[15];
	[HideInInspector]public RectTransform[] matrixBallNumsRects = new RectTransform[15];
	[HideInInspector]public GameObject igSnookerTextsParent;
	[HideInInspector]public Image igSnookerBallDisplayImg;
	[HideInInspector]public Transform igSnookerTurnIndicator;
	[HideInInspector]public Text[] snookerScoresText = new Text[2];
	[HideInInspector]public Text[] snookerScoresNameText = new Text[2];
	[HideInInspector]public Image[] settingsControlImgs = new Image[2];
	[HideInInspector]public Text[] settingsControlTexts = new Text[2];
	[HideInInspector]public Text[] settingsHandModeTexts = new Text[2];
	[HideInInspector]public Text settingsTableText;
	[HideInInspector]public Text settingsTablePatternText;
	[HideInInspector]public Image settingsGuideImg;
	[HideInInspector]public Text settingsGuideText;
	[HideInInspector]public Slider settingsSensitivitySlider;
	[HideInInspector]public InputField[] enterNamePlayerTexts = new InputField[2];
	[HideInInspector]public GameObject[] enterNamePlayerTextErrors = new GameObject[2];
	[HideInInspector]public Image[] enterNameAvatars = new Image[2];
	[HideInInspector]public Transform rackSelectedObjTrans;
	[HideInInspector]public Transform aiLevelSelectedObjTrans;
	[HideInInspector]public GameObject indivisualControlBtnObj;
	[HideInInspector]public GameObject enterNameSkillGroup;
	[HideInInspector]public Image enterSoloNameAvatarImg;
	[HideInInspector]public InputField enterSoloNamePlayerText;
	[HideInInspector]public GameObject enterSoloNamePlayerError;
	[HideInInspector]public Text enterSoloNameTitle;
	[HideInInspector]public Text modeTypeTitleText;
	[HideInInspector]public Text selectAvatarTitleText;
	[HideInInspector]public Text selectCueTitleText;
	[HideInInspector]public Transform[] selectCueBtnObjsTrans = new Transform[6];
	[HideInInspector]public Transform selectCueSelectedObjTrans;
	[HideInInspector]public Text gmOverTitleText;
	[HideInInspector]public GameObject[] gmOverAvatarObjs = new GameObject[2];
	[HideInInspector]public Text[] gmOverNameTexts = new Text[2];
	[HideInInspector]public Transform gmOverWinnerParentTrans;
	[HideInInspector]public GameObject gmOverParticleStarLoopObj;
	[HideInInspector]public Text gmOverRackText;
	[HideInInspector]public Text[] gmOverBtnsText = new Text[2];
	[HideInInspector]public GameObject[] gmOverNextAndAgainBtnImgs = new GameObject[2];
	[HideInInspector]public Text gmOverSoloTitleText;
	[HideInInspector]public Text gmOverSoloScoreText;
	[HideInInspector]public Text gmOverSoloScoreBestText;
	[HideInInspector]public rateGameMsgScript rateGameMsgScriptComp;
	[HideInInspector]public int totalTimePlayed;
	[HideInInspector]public int timeAlreadySaved;
	public static string totalTimeFormated;
	public static int totalGamesPlayedVsCPU = 0;
	public static int totalGamesWonVsCPU = 0;
	public static int totalGamesPlayedVsHuman = 0;
	public static int totalGamesWonVsHuman = 0;
	public static int totalBallsPocketed = 0;
	public static int ttBestScore;
	public static int matrixBestScore;
	[HideInInspector]public const int BREAK_FORCE_BALL_COUNT = 4;
	[HideInInspector]public readonly int[] breakForce8BallArray = new int[4] {2, 7, 8, 11};
	[HideInInspector]public readonly int[] breakForceUK8BallArray = new int[4] {1, 7, 8, 9};
	[HideInInspector]public readonly int[] breakForce9BallArray = new int[4] {1, 2, 11, 11};
	[HideInInspector]public int[] breakForceArray = new int[4];
	[HideInInspector]public float spinRotationY;
	[HideInInspector]public Matrix4x4 ortho;
	[HideInInspector]public Matrix4x4 perspective;
	[HideInInspector]public const float near = 5f;
	[HideInInspector]public const float far = 1000f;
	[HideInInspector]public const float orthoSize = 20f;
	[HideInInspector]public float orthoAspect;
	[HideInInspector]public Coroutine camCoroutine;
	public bool aiPlaying, stopBalls;
	[HideInInspector]public float aiHitForce;
	[HideInInspector]public float aiTurningSpeed;
	[HideInInspector]public int aiBallNum;
	[HideInInspector]public bool aisaHoleIsOnLeft = true;
	[HideInInspector]public Vector3 aisaTargetToHoleDir;
	[HideInInspector]public int aisaTargetHole;
	[HideInInspector]public float[] aiAllPossibleHoleAngles = new float[6];
	[HideInInspector]public int[] aiBestPossibleHoleNumPerBall = new int[15];
	[HideInInspector]public float[] aiBestPossibleHoleAnglePerBall = new float[15];
	[HideInInspector]public float aiReboundTurningStartCueX;
	[HideInInspector]public bool aiReboundTargetFound;
	[HideInInspector]public int aiBallsPottedInThisTurn;
	[HideInInspector]public Hashtable screensNameArray;
	[HideInInspector]public GameObject[] screensObjArray;
	[HideInInspector]public string[] screensNameStringsArray = new string[21] {"MainMenu", "ModeTypeSelect", "SnookerRedSelect", "EnterName", "EnterNameSolo", "SelectAvatar", "About", "Settings", "SelectControl", "Stats", "InGame", "Pause", "GameOver", "GameOverSolo", "MessageBox", "Help", "Rules", "HighScores", "SelectCue", "UnlockFullGame", "Console"};
	public static string curScreen;
	[HideInInspector]public string prevScreen;
	[HideInInspector]public string screenToGoAfterMenuAnim = "null";
	public static float dtTimeAtLastFrame = 0f;
	public static float dtTimeAtCurrentFrame = 0f;
	public static float deltaTimeCustom = 0f;
	public static bool bAnimateGui = true;
	public static float btnAnimValue = 1f;
	[HideInInspector]public float btnAnimVel;
	[HideInInspector]public float btnAnimTarget;
	[HideInInspector]public float btnAnimCompleteCheckVal;
	[HideInInspector]public string whatToDoAfterMenuAnim = string.Empty;
	[HideInInspector]public GameObject gameNameObj;
	public static float gameNamePos = 1f;
	[HideInInspector]public float gameNameTargetPos;
	[HideInInspector]public float gameNameVel;
	[HideInInspector]public bool gameNameHidden;
	[HideInInspector]public GUIDE_TYPE guideType = GUIDE_TYPE.FULL;
	[HideInInspector]public const int totalPatternsCount = 11;
	[HideInInspector]public int selectedTable;
	[HideInInspector]public int selectedPattern;
	public static bool roomEnabled = true;
	public bool diamondsEnabled = false;
	[HideInInspector]public readonly string[] guideNames = new string[4] {"NO GUIDE", "HARD", "MEDIUM", "EASY"};
	[HideInInspector]public readonly string[] tableNames = new string[10] {"GREEN", "BLUE", "CORAL", "GRAY", "BROWN", "RED", "EMERALD", "PURPLE", "YELLOW", "PETROL BLUE"};
	[HideInInspector]public readonly Color[] tableColorArray = new Color[10] {new Color(1f, 1f, 1f, 1f), new Color(1f, 1f, 1f, 1f), new Color(1f, 1f, 1f, 1f), new Color(211f / 255f, 211f / 255f, 211f / 255f, 1f), new Color(1f, 148f / 255f, 0f, 1f), new Color(1f, 11f / 51f, 8f / 51f, 1f), new Color(0.333333343f, 1f, 0.5882353f, 1f), new Color(44f / 51f, 10f / 51f, 1f, 1f), new Color(1f, 44f / 51f, 0f, 1f), new Color(0f, 0.9411765f, 1f, 1f)};
	[HideInInspector]public readonly string[] controlNames = new string[3] {"SET POWER", "POWER FLICK", "HIT WITH CUE"};
	[HideInInspector]public CONTROLS[] controlMode = new CONTROLS[2] {CONTROLS.DRAG_CUE, CONTROLS.DRAG_CUE};
	[HideInInspector]public HAND_MODE[] handMode = new HAND_MODE[2];
	[HideInInspector]public float sensitivityValue = 1f;
	public static bool soundEnabled = true;
	public static float musicVolVal = 0.75f;
	[HideInInspector]public float musicVolMultiplierMenu = 1f;
	[HideInInspector]public float musicVolMultiplierInGame = 0.5f;
	public static bool redGuideEnabled = true;
	public static bool pinchZoomEnabled = true;
	public static bool dontGoToTopBallInHand = true;
	public static bool tapToAimEnabled = true;
	public static bool autoAimEnabled = true;
	[HideInInspector]public GameObject[] settingsGroupsArray = new GameObject[4];
	[HideInInspector]public Transform[] settingsTabBtnsTransArray = new Transform[4];
	[HideInInspector]public Transform settingsSelectedTabArrowTrans;
	[HideInInspector]public bool cameFromEnterNameToSettings;
	[HideInInspector]public Transform selControlSelectedTrans;
	[HideInInspector]public Transform[] selControlBtnsTransArr = new Transform[3];
	[HideInInspector]public GameObject[] rulesGroupsArray = new GameObject[6];
	[HideInInspector]public Transform[] rulesTabBtnsTransArray = new Transform[6];
	[HideInInspector]public Transform rulesSelectedTabArrowTrans;
	[HideInInspector]public const int TOTAL_CUE_COUNT = 6;
	[HideInInspector]public int[] selectedCue = new int[2] {5, 4};
	[HideInInspector]public int cuePlayerToChoose;
	[HideInInspector]public bool CHEAT_ENABLED;
	[HideInInspector]public int consoleTapCount;
	[HideInInspector]public InputField consoleDebugDataField;
	[HideInInspector]public InputField consoleInputCmdField;
	[HideInInspector]public bool fullGameUnlocked;
	[HideInInspector]public InputField winUnlockSerNoField;
	[HideInInspector]public Text winUnlockErrorText;
	[HideInInspector]public GameObject unlockFullGameBtnObj;
}